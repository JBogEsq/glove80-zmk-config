/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 2>, <&to 2>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };

        mo_lay_kp: mo_lay_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer on hold kp on tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };

        l_to_mo: l_to_mo {
            compatible = "zmk,behavior-hold-tap";
            label = "Mo layer on hold, to on tap.";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-unless-interrupted";
        };

        ht_caps_cw: ht_caps_cw {
            compatible = "zmk,behavior-hold-tap";
            label = "HT Caps or Capsword";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        qb_home {
            bindings = <&to 0>;
            key-positions = <23 26>;
        };

        qm_to_media {
            bindings = <&to 5>;
            key-positions = <23 25>;
        };

        qh_to_nav {
            bindings = <&to 2>;
            key-positions = <23 38>;
        };

        qt_to_num {
            bindings = <&to 3>;
            key-positions = <23 37>;
        };

        sm_up {
            bindings = <&kp UP>;
            key-positions = <35 25>;
        };

        sr_left {
            bindings = <&kp LEFT>;
            key-positions = <35 36>;
        };

        st_down {
            bindings = <&kp DOWN>;
            key-positions = <35 37>;
        };

        sh_right {
            bindings = <&kp RIGHT>;
            key-positions = <35 38>;
        };

        sb_pgup {
            bindings = <&kp PG_UP>;
            key-positions = <35 26>;
        };

        sd_pgdown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <35 50>;
        };

        s+_home {
            bindings = <&kp HOME>;
            key-positions = <35 27>;
        };

        s_quote_end {
            bindings = <&kp END>;
            key-positions = <35 51>;
        };

        vr_previous {
            bindings = <&kp C_PREVIOUS>;
            key-positions = <47 36>;
        };

        vt_play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <47 37>;
        };

        vh_next {
            bindings = <&kp C_NEXT>;
            key-positions = <47 38>;
        };

        vc_softer {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <47 48>;
        };

        vg_mute {
            bindings = <&kp C_MUTE>;
            key-positions = <47 49>;
        };

        vd_louder {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <47 50>;
        };

        bw_left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <26 24>;
        };

        bm_right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 25>;
        };

        hr_left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <38 36>;
        };

        ht_right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <38 37>;
        };

        dc_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <50 48>;
        };

        dg_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <50 49>;
        };

        wmb_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <24 25 26>;
        };

        rth_ent {
            bindings = <&kp ENTER>;
            key-positions = <36 37 38>;
        };

        srt_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <35 36 37>;
        };

        qwm_delete {
            bindings = <&kp DELETE>;
            key-positions = <23 24 25>;
        };

        cgd_tab {
            bindings = <&kp TAB>;
            key-positions = <50 49 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&kp F1      &kp F2    &kp F3  &kp F4  &kp F5                                                                                                                                           &kp F6  &kp F7  &kp F8  &kp F9    &kp F10
&kp EQUAL   &kp N1    &kp N2  &kp N3  &kp N4  &kp N5                                                                                                              &kp N6               &kp N7  &kp N8  &kp N9  &kp N0    &kp BSPC
&kp TAB     &kp Q     &kp W   &kp M   &kp B   &kp EQUAL                                                                                                           &kp MINUS            &kp K   &kp F   &kp J   &kp Z     &kp DELETE
&kp ESC     &kp S     &kp R   &kp T   &kp H   &kp Y                                                                                                               &kp DOT              &kp A   &kp N   &kp O   &kp I     &kp ENTER
&kp LCTRL   &kp V     &kp C   &kp G   &kp D   &kp SQT    &mo_lay_kp 6 DOUBLE_QUOTES  &mo_lay_kp 1 COLON  &none         &none  &kp DEL              &lt 7 ESCAPE   &mt SEMICOLON COMMA  &kp U   &kp L   &kp P   &kp X     &kp RCTRL
&magic 8 0  &kp LALT  &none   &to 0   &none              &mo_lay_kp 3 E              &mt LSHFT ENTER     &l_to_mo 4 4  &none  &mt RSHFT BACKSPACE  &mt TAB SPACE                       &none   &none   &none   &kp RALT  &kp LGUI
            >;

            label = "Base";
        };

        symb_layer {
            bindings = <
&trans  &trans                    &trans                             &trans                               &trans                                                                                                      &trans  &trans  &trans  &trans  &trans
&trans  &trans                    &trans                             &trans                               &trans                        &trans                                                                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none                     &kp GRAVE                          &mt PIPE TILDE                       &mt SLASH BACKSLASH           &kp HASH                                                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt LESS_THAN LEFT_BRACE  &mt LEFT_BRACKET LEFT_PARENTHESIS  &mt RIGHT_BRACKET RIGHT_PARENTHESIS  &mt GREATER_THAN RIGHT_BRACE  &kp AT                                                                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp CARET                 &kp ASTERISK                       &kp PERCENT                          &mt QUESTION EXCL             &mt AMPERSAND DOLLAR  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                    &trans                             &to 0                                &trans                                              &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Symbols";
        };

        nav_layer {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP    &kp C_PREV                    &kp C_NEXT               &kp C_PP                                                                                                                 &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none            &kp PAUSE_BREAK
&trans        &none           &none                         &none                    &none                   &none                                                                                 &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp PSCRN
&trans        &kp SCROLLLOCK  &kp INS                       &kp UP                   &kp HOME                &kp END                                                                               &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp SLCK
&trans        &kt CAPSLOCK    &kp LEFT                      &kp DOWN                 &kp RIGHT               &kp PG_UP                                                                             &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &none
&trans        &kp K_CMENU     &mt C_PREVIOUS C_VOLUME_DOWN  &mt C_MUTE C_PLAY_PAUSE  &mt C_NEXT C_VOLUME_UP  &kp PG_DN  &mt LS(TAB) TAB      &mt DELETE BACKSPACE  &to 0   &trans  &trans  &trans  &kp COMMA  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans        &trans          &trans                        &to 0                    &trans                             &mt LS(ENTER) ENTER  &mt LSHIFT ESC        &trans  &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;

            label = "Navigation";
        };

        num_layer {
            bindings = <
&trans  &trans                  &trans  &trans  &trans                                                                                                                 &trans  &trans  &trans  &trans  &trans
&trans  &trans                  &trans  &trans  &trans  &trans                                                                                                 &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp TAB                 &kp N1  &kp N2  &kp N3  &mt DELETE BACKSPACE                                                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt KP_DIVIDE KP_MINUS  &kp N4  &kp N5  &kp N6  &mt KP_MULTIPLY KP_PLUS                                                                                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_NUMBER_0         &kp N7  &kp N8  &kp N9  &mt EQUAL KP_DOT         &mo_lay_kp 6 ESCAPE       &mo_lay_kp 1 HASH   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans                  &trans  &to 0   &trans                           &mo_lay_kp 2 KP_NUMBER_0  &mt LSHFT KP_ENTER  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Number";
        };

        func_layer {
            bindings = <
&trans  &trans        &trans  &trans   &trans                                                                    &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &trans   &trans   &trans                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LSHFT     &kp F1  &kp F2   &kp F3   &kp F4                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LEFT_ALT  &kp F5  &kp F6   &kp F7   &kp F8                                                   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &sk LCTRL     &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans  &to 0    &trans            &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Functions";
        };

        macro_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &to 0   &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Macros";
        };

        left_home_layer {
            bindings = <
&none  &none       &none         &none                &none                                                                                     &trans  &trans  &trans  &trans  &trans
&none  &none       &none         &none                &none            &none                                                            &trans  &trans  &trans  &trans  &trans  &trans
&none  &kp LC(N)   &kp LC(S)     &mt LC(LS(V)) LC(V)  &mt LC(A) LC(C)  &mt LC(X) LC(A)                                                  &trans  &trans  &trans  &trans  &trans  &trans
&none  &sk LSHFT   &sk LEFT_GUI  &sk LCTRL            &sk LEFT_ALT     &kp LC(Z)                                                        &trans  &trans  &trans  &trans  &trans  &trans
&none  &caps_word  &kp END       &kp HOME             &kp LC(Y)        &kp LG(D)        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&none  &none       &none         &to 0                &none                             &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "Left Home Row";
        };

        right_home_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans         &trans     &trans         &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans         &trans     &trans         &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans         &trans     &trans         &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &sk RIGHT_ALT  &sk RCTRL  &sk RIGHT_GUI  &sk RSHFT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans     &trans         &trans     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans         &trans     &trans         &trans     &trans
            >;

            label = "Right Home Row";
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 0
            >;
        };

        q_to_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "To Layey";
        };

        s_nav_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "S Nav Layer";
        };

        v_media_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;

            label = "V Media Layer";
        };
    };
};
